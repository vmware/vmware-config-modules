# Copyright 2024 Broadcom. All Rights Reserved.
# This file holds the default configurable parameters for config-modules.

# Default REST client retry configuration
# https://urllib3.readthedocs.io/en/stable/reference/urllib3.util.html#urllib3.util.Retry
# Connect: How many connection-related errors to retry on
# Read: How many times to retry on read errors
# Redirect: How many redirects to perform
# Status: How many times to retry on bad status codes
# Other: How many times to retry on other errors
# StatusForceList: A set of integer HTTP status codes that we should force a retry on
# BackoffFactor: A backoff factor to apply between attempts after the second try
[rest.retry]
Connect=0
Read=0
Redirect=5
Status=5
Other=0
StatusForceList=408,500,502,503,504
BackoffFactor=0.2

# vCenter REST client
# APITimeoutSeconds: Timeout in seconds for any vCenter REST API calls
# TaskTimeoutSeconds: The max amount of time in seconds to wait for a task to complete
# TaskPollIntervalSeconds: The interval in seconds to poll for task completion
[vcenter.rest]
APITimeoutSeconds=30
TaskTimeoutSeconds=300
TaskPollIntervalSeconds=30

# vCenter VMOMI client
# TaskTimeoutSeconds: The max amount of time in seconds to wait for a task to complete
# TaskPollIntervalSeconds: The interval in seconds to poll for task completion
[vcenter.vmomi]
TaskTimeoutSeconds=30
TaskPollIntervalSeconds=1

# vCenter VMOMI SSO client
# SAMLTokenDurationSeconds: Duration in seconds that the SAML token requested will be valid
[vcenter.vmomi.sso]
SAMLTokenDurationSeconds=600

# vCenter profile configuration
# TaskTimeoutSeconds: The max amount of time in seconds to wait for a task to complete
# TaskPollIntervalSeconds: The interval in seconds to poll for task completion
[vcenter.profile]
TaskTimeoutSeconds=300
TaskPollIntervalSeconds=10

# SDDC Manager REST client
# APITimeoutSeconds: Timeout in seconds for any SDDC Manager REST API calls
# TaskTimeoutSeconds: The max amount of time in seconds to wait for a task to complete
# TaskPollIntervalSeconds: The interval in seconds to poll for task completion
[sddc_manager.rest]
APITimeoutSeconds=30
TaskTimeoutSeconds=1200
TaskPollIntervalSeconds=30

# Rotating File Logging Handler for API service
# LogFileDir: Log file directory. Directories will be created if does not exists
# FileName: Name of the log file
# FileSize: Max size in bytes. Rotation starts after the file size is reached
# MaxCount: Max number of log files to be saved. Must be greater than 0
# LogLevel: Log Level for file logging. Must be one of [DEBUG, INFO, WARN, ERROR]
[service.logging.file]
LogFileDir=/tmp/config-module
FileName=app.log
FileSize=1024
MaxCount=5
LogLevel=INFO

# Console Logging Handler for API service
# LogLevel: Log Level for console logging. Must be one of [DEBUG, INFO, WARN, ERROR]
[service.logging.console]
LogLevel=INFO

# Logging configuration for logger adapter
# Format: Log format to apply to all messages
# Example - "{hostname} - {controller_name} - {msg}"
# When provided, will apply the format to all log messages populated with the given context
#
# Supported context parameters:
# controller_name - The controller's name
# configuration_id - The controller's id as defined in the compliance kit
# path_in_schema - The path in the schema to the controller
# title - The controller's title as defined in the compliance kit
# tags - The controller's tags
# version - The controller's version
# since - The version when the controller was first introduced into the compliance kit
# products - The products the controller is associated with
# components - The components within a product the controller is associated with
# status - The controller's status
# impact - The impact on the product/component of performing remediation
# scope - Any relevant information or limitations regarding how the controller is run
# type - The type of controller
# hostname - Hostname of the resource being operated on
# msg - The logged message passed in the original logging call
[logging.adapter]
Format=hostname={hostname} controller={controller_name} product={products} {msg}

# Configuration for metadata of controllers
# PublishMetadata: To include / exclude the metadata from the controllers in the response
# MetadataFileName: An absolute path to the JSON file with the desired custom metadata.
#   The contents of this file should match the schema starting at product level. For example:
#     {
#         "vcenter": {
#             "backup_schedule_config": {
#                 "metadata": {
#                     "new_metadata_key": "new_metadata_value"
#                 }
#             }
#         }
#     }
# IncludeOnlyCustomMetadata: If the metadata being published in the responses
#    should include only the custom metadata from the file, or all controller metadata.
[metadata]
PublishMetadata=false
MetadataFileName=
IncludeOnlyCustomMetadata=False
